"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TESTOPS_BUILD_COMPLETED_ENV = exports.RERUN_ENV = exports.RERUN_TESTS_ENV = exports.PERF_MEASUREMENT_ENV = exports.TESTOPS_BUILD_ID_ENV = exports.TESTOPS_SCREENSHOT_ENV = exports.TESTOPS_JWT_ENV = exports.FUNNEL_INSTRUMENTATION_URL = exports.LOG_KIND_USAGE_MAP = exports.CAPTURE_MODES = exports.PERCY_DOM_CHANGING_COMMANDS_ENDPOINTS = exports.PERCY_LOGS_FILE = exports.COLORS = exports.LOGS_FILE = exports.NOT_ALLOWED_KEYS_IN_CAPS = exports.ACCESSIBILITY_API_URL = exports.BSTACK_SERVICE_VERSION = exports.DEFAULT_WAIT_INTERVAL_FOR_PENDING_UPLOADS = exports.DEFAULT_WAIT_TIMEOUT_FOR_PENDING_UPLOADS = exports.BATCH_EVENT_TYPES = exports.DATA_BATCH_INTERVAL = exports.DATA_BATCH_SIZE = exports.DATA_SCREENSHOT_ENDPOINT = exports.DATA_BATCH_ENDPOINT = exports.DATA_EVENT_ENDPOINT = exports.DATA_ENDPOINT = exports.consoleHolder = exports.DEFAULT_OPTIONS = exports.VALID_APP_EXTENSION = exports.BROWSER_DESCRIPTION = void 0;
const package_json_1 = require("../package.json");
exports.BROWSER_DESCRIPTION = [
    'device',
    'os',
    'osVersion',
    'os_version',
    'browserName',
    'browser',
    'browserVersion',
    'browser_version'
];
exports.VALID_APP_EXTENSION = [
    '.apk',
    '.aab',
    '.ipa'
];
exports.DEFAULT_OPTIONS = {
    setSessionName: true,
    setSessionStatus: true,
    testObservability: true,
    accessibility: false
};
exports.consoleHolder = Object.assign({}, console);
exports.DATA_ENDPOINT = 'https://collector-observability.browserstack.com';
exports.DATA_EVENT_ENDPOINT = 'api/v1/event';
exports.DATA_BATCH_ENDPOINT = 'api/v1/batch';
exports.DATA_SCREENSHOT_ENDPOINT = 'api/v1/screenshots';
exports.DATA_BATCH_SIZE = 1000;
exports.DATA_BATCH_INTERVAL = 2000;
exports.BATCH_EVENT_TYPES = ['LogCreated', 'TestRunStarted', 'TestRunFinished', 'HookRunFinished', 'HookRunStarted', 'ScreenshotCreated'];
exports.DEFAULT_WAIT_TIMEOUT_FOR_PENDING_UPLOADS = 5000; // 5s
exports.DEFAULT_WAIT_INTERVAL_FOR_PENDING_UPLOADS = 100; // 100ms
exports.BSTACK_SERVICE_VERSION = package_json_1.version;
exports.ACCESSIBILITY_API_URL = 'https://accessibility.browserstack.com/api';
exports.NOT_ALLOWED_KEYS_IN_CAPS = ['includeTagsInTestingScope', 'excludeTagsInTestingScope'];
exports.LOGS_FILE = 'logs/bstack-wdio-service.log';
exports.COLORS = {
    error: 'red',
    warn: 'yellow',
    info: 'cyanBright',
    debug: 'green',
    trace: 'cyan',
    progress: 'magenta'
};
exports.PERCY_LOGS_FILE = 'logs/percy.log';
exports.PERCY_DOM_CHANGING_COMMANDS_ENDPOINTS = [
    '/session/:sessionId/url',
    '/session/:sessionId/forward',
    '/session/:sessionId/back',
    '/session/:sessionId/refresh',
    '/session/:sessionId/screenshot',
    '/session/:sessionId/actions',
    '/session/:sessionId/appium/device/shake'
];
exports.CAPTURE_MODES = ['click', 'auto', 'screenshot', 'manual', 'testcase'];
exports.LOG_KIND_USAGE_MAP = {
    'TEST_LOG': 'log',
    'TEST_SCREENSHOT': 'screenshot',
    'TEST_STEP': 'step',
    'HTTP': 'http'
};
exports.FUNNEL_INSTRUMENTATION_URL = 'https://api.browserstack.com/sdk/v1/event';
// Env variables - Define all the env variable constants over here
// To store the JWT token returned the session launch
exports.TESTOPS_JWT_ENV = 'BS_TESTOPS_JWT';
// To store the setting of whether to send screenshots or not
exports.TESTOPS_SCREENSHOT_ENV = 'BS_TESTOPS_ALLOW_SCREENSHOTS';
// To store build hashed id
exports.TESTOPS_BUILD_ID_ENV = 'BS_TESTOPS_BUILD_HASHED_ID';
// Whether to collect performance instrumentation or not
exports.PERF_MEASUREMENT_ENV = 'BROWSERSTACK_O11Y_PERF_MEASUREMENT';
// Whether the current run is rerun or not
exports.RERUN_TESTS_ENV = 'BROWSERSTACK_RERUN_TESTS';
// The tests that needs to be rerun
exports.RERUN_ENV = 'BROWSERSTACK_RERUN';
// To store whether the build launch has completed or not
exports.TESTOPS_BUILD_COMPLETED_ENV = 'BS_TESTOPS_BUILD_COMPLETED';
