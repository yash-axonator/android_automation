"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.screenshotApp = exports.screenshot = exports.snapshot = void 0;
const tryRequire = function (pkg, fallback) {
    try {
        return require(pkg);
    }
    catch {
        return fallback;
    }
};
const percySnapshot = tryRequire('@percy/selenium-webdriver', null);
const percyAppScreenshot = tryRequire('@percy/appium-app', {});
const PercyLogger_1 = require("./PercyLogger");
/* eslint-disable @typescript-eslint/no-unused-vars */
let snapshotHandler = (...args) => {
    PercyLogger_1.PercyLogger.error('Unsupported driver for percy');
};
if (percySnapshot) {
    snapshotHandler = (browser, name) => {
        if (process.env.PERCY_SNAPSHOT === 'true') {
            return percySnapshot(browser, name);
        }
    };
}
exports.snapshot = snapshotHandler;
/* eslint-disable @typescript-eslint/no-unused-vars */
let screenshotHandler = async (...args) => {
    PercyLogger_1.PercyLogger.error('Unsupported driver for percy');
};
if (percySnapshot && percySnapshot.percyScreenshot) {
    screenshotHandler = percySnapshot.percyScreenshot;
}
exports.screenshot = screenshotHandler;
/* eslint-disable @typescript-eslint/no-unused-vars */
let screenshotAppHandler = async (...args) => {
    PercyLogger_1.PercyLogger.error('Unsupported driver for percy');
};
if (percyAppScreenshot) {
    screenshotAppHandler = percyAppScreenshot;
}
exports.screenshotApp = screenshotAppHandler;
