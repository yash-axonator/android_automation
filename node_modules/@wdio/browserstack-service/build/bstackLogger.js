"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BStackLogger = void 0;
const node_path_1 = __importDefault(require("node:path"));
const node_fs_1 = __importDefault(require("node:fs"));
const logger_1 = __importDefault(require("@wdio/logger"));
const constants_1 = require("./constants");
const log = (0, logger_1.default)('@wdio/browserstack-service');
class BStackLogger {
    static info(message) {
        log.info(message);
    }
    static error(message) {
        log.error(message);
    }
    static debug(message, param) {
        if (param) {
            log.debug(message, param);
        }
        else {
            log.debug(message);
        }
    }
    static warn(message) {
        log.warn(message);
    }
    static trace(message) {
        log.trace(message);
    }
    static clearLogger() {
        if (this.logFileStream) {
            this.logFileStream.end();
        }
        this.logFileStream = null;
    }
    static clearLogFile() {
        if (node_fs_1.default.existsSync(this.logFilePath)) {
            node_fs_1.default.truncateSync(this.logFilePath);
        }
    }
    static ensureLogsFolder() {
        if (!node_fs_1.default.existsSync(this.logFolderPath)) {
            node_fs_1.default.mkdirSync(this.logFolderPath);
        }
    }
}
exports.BStackLogger = BStackLogger;
BStackLogger.logFilePath = node_path_1.default.join(process.cwd(), constants_1.LOGS_FILE);
BStackLogger.logFolderPath = node_path_1.default.join(process.cwd(), 'logs');
